/*
 * based on
 * https://github.com/ream88/stylelint-config-idiomatic-order/
 * which we couldn't install because it relies on stylelint-config-standard
 * which we were having problem installing
 * https://github.com/stylelint/stylelint-config-recommended/issues/21
 */

const content = [
  "content",
  "counter-increment",
  "counter-reset",
  "quotes",
  "include-source",
  "symbols",
  "system",
];

const position = [
  "direction",
  "position",
  "z-index",
  "top",
  "right",
  "bottom",
  "left",
  "clear",
  "transform",
  "transform-origin",
];

const displayAndBoxModel = [
  "display",
  "float",
  "overflow",
  "overflow-x",
  "overflow-y",
  "overflow-wrap",
  "width",
  "min-width",
  "max-width",
  "height",
  "min-height",
  "max-height",
  "box-sizing",
  "flex",
  "flex-basis",
  "flex-direction",
  "flex-flow",
  "flex-grow",
  "flex-shrink",
  "flex-wrap",
  "align-content",
  "align-items",
  "align-self",
  "justify-content",
  "order",
  "place-content",
  "grid",
  "grid-area",
  "grid-auto-columns",
  "grid-auto-flow",
  "grid-auto-rows",
  "grid-column",
  "grid-column-end",
  "grid-column-gap",
  "grid-column-start",
  "grid-gap",
  "grid-row",
  "grid-row-end",
  "grid-row-gap",
  "grid-row-start",
  "grid-template",
  "grid-template-areas",
  "grid-template-columns",
  "grid-template-rows",
  "padding",
  "padding-top",
  "padding-right",
  "padding-bottom",
  "padding-left",
  "border",
  "border-color",
  "border-style",
  "border-width",
  "border-top",
  "border-top-color",
  "border-top-style",
  "border-top-width",
  "border-right",
  "border-right-color",
  "border-right-style",
  "border-right-width",
  "border-bottom",
  "border-bottom-color",
  "border-bottom-style",
  "border-bottom-width",
  "border-left",
  "border-left-color",
  "border-left-style",
  "border-left-width",
  "border-radius",
  "border-top-right-radius",
  "border-bottom-right-radius",
  "border-bottom-left-radius",
  "border-top-left-radius",
  "margin",
  "margin-top",
  "margin-right",
  "margin-bottom",
  "margin-left",
  "outline",
  "outline",
  "outline-color",
  "outline-style",
  "outline-width",
  "box-decoration-break",
  "clip",
  "clip-path",
  "object-fit",
  "object-position",
  "column-count",
  "column-fill",
  "column-gap",
  "column-rule",
  "column-rule-colorv",
  "column-rule-style",
  "column-rule-width",
  "column-span",
  "column-width",
  "columns",
  "isolation",
];

const tablesAndLists = [
  "table-layout",
  "vertical-align",
  "border-collapse",
  "border-spacing",
  "caption-side",
  "empty-cells",
  "speak-header",
  "list-style",
  "list-style-image",
  "list-style-position",
  "list-style-type",
];

const color = [
  "color",
  "background",
  "background-attachment",
  "background-blend-mode",
  "background-clip",
  "background-color",
  "background-image",
  "background-origin",
  "background-position-x",
  "background-position-y",
  "background-position",
  "background-repeat",
  "background-size",
  "visibility",
  "box-shadow",
  "opacity",
  "border-image",
  "border-image-outset",
  "border-image-repeat",
  "border-image-slice",
  "border-image-source",
  "border-image-width",
  "mask",
  "mix-blend-mode",
];

const text = [
  "font",
  "font-family",
  "font-size",
  "font-weight",
  "font-size-adjust",
  "font-stretch",
  "font-style",
  "font-variant",
  "font-feature-settings",
  "font-kerning",
  "text-align",
  "text-align-last",
  "text-combine-upright",
  "text-decoration",
  "text-decoration-color",
  "text-decoration-line",
  "text-decoration-style",
  "text-emphasis",
  "text-emphasis-color",
  "text-emphasis-position",
  "text-emphasis-style",
  "text-indent",
  "text-justify",
  "text-orientation",
  "text-overflow",
  "text-rendering",
  "text-shadow",
  "text-transform",
  "text-underline-position",
  "line-height",
  "line-break",
  "letter-spacing",
  "white-space",
  "word-spacing",
  "writing-mode",
  "overflow-wrap",
  "word-break",
  "hanging-punctuation",
  "hyphens",
  "orphans",
  "widows",
];

const other = [
  "cursor",
  "touch-action",
  "caret-color",
  "filter",
  "behaviour",
  "zoom",
  "max-zoom",
  "min-zoom",
  "user-zoom",
  "cue",
  "cue-after",
  "cue-before",
  "elevation",
  "animation",
  "animation-delay",
  "animation-direction",
  "animation-duration",
  "animation-fill-mode",
  "animation-iteration-count",
  "animation-name",
  "animation-play-state",
  "animation-timing-function",
  "transition",
  "transition-delay",
  "transition-duration",
  "transition-property",
  "transition-timing-function",
  "backface-visibility",
  "break-after",
  "page-break-after",
  "break-before",
  "page-break-before",
  "break-inside",
  "page-break-inside",
  "perspective",
  "perspective-origin",
  "pointer-events",
  "resize",
  "scroll-behavior",
  "scroll-snap-coordinate",
  "scroll-snap-destination",
  "scroll-snap-type",
  "will-change",
];

module.exports = {
  plugins: ["stylelint-order"],
  rules: {
    // top level order - i.e., @extend before CSS rules etc
    "order/order": [
      // Custom properties (e. g., --property: 10px;)
      "custom-properties",

      // Dollar variables (e. g., $variable)
      "dollar-variables",

      // @extend
      {
        type: "at-rule",
        name: "extend",
        hasBlock: false,
      },

      // CSS declarations (e. g., display: block)
      "declarations",

      // Nested at-rules (e. g., div { @media () {} })
      "at-rules",

      // Nested rules (e. g., a { span {} })
      "rules",
    ],

    // order of CSS declarations
    "order/properties-order": [
      [
        ...content,
        ...position,
        ...displayAndBoxModel,
        ...tablesAndLists,
        ...color,
        ...text,
        ...other,
      ],

      // what to do if a property is not in the list:
      // bottomAlphabetical: they should be below everything else, alphabetically
      { unspecified: "bottomAlphabetical" },
    ],
  },
};
